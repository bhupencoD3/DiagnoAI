name: Deploy DiagnoAI - FINAL

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Deploy to k3s
      run: |
        # Write FRESH kubeconfig with new secret name
        echo "${{ secrets.KUBECONFIG_FINAL }}" > /tmp/kubeconfig-final.yaml
        
        # Use kubectl from system (not setup-kubectl action)
        kubectl --kubeconfig=/tmp/kubeconfig-final.yaml apply -f deployment/k8s/namespace.yaml --validate=false
        kubectl --kubeconfig=/tmp/kubeconfig-final.yaml apply -f deployment/k8s/ollama-pvc.yaml --validate=false
        kubectl --kubeconfig=/tmp/kubeconfig-final.yaml apply -f deployment/k8s/vector-store-pvc.yaml --validate=false
        kubectl --kubeconfig=/tmp/kubeconfig-final.yaml apply -f deployment/k8s/data-pvc.yaml --validate=false
        
        kubectl --kubeconfig=/tmp/kubeconfig-final.yaml apply -f deployment/k8s/ollama-deployment.yaml --validate=false
        echo "‚è≥ Waiting for Ollama..."
        kubectl --kubeconfig=/tmp/kubeconfig-final.yaml wait --for=condition=ready pod -l app=ollama -n diagnoai --timeout=2400s --validate=false
        
        kubectl --kubeconfig=/tmp/kubeconfig-final.yaml apply -f deployment/k8s/configmap.yaml --validate=false
        kubectl --kubeconfig=/tmp/kubeconfig-final.yaml apply -f deployment/k8s/deployment.yaml --validate=false
        kubectl --kubeconfig=/tmp/kubeconfig-final.yaml apply -f deployment/k8s/service.yaml --validate=false
        
        kubectl --kubeconfig=/tmp/kubeconfig-final.yaml rollout status deployment/diagnoai -n diagnoai --timeout=300s
        
        echo "‚úÖ Deployment completed!"
        kubectl --kubeconfig=/tmp/kubeconfig-final.yaml get all -n diagnoai
        
        EXTERNAL_IP=$(kubectl --kubeconfig=/tmp/kubeconfig-final.yaml get svc diagnoai-service -n diagnoai -o jsonpath='{.status.loadBalancer.ingress[0].ip}' || echo "Pending")
        echo "üåê Your DiagnoAI: http://$EXTERNAL_IP:8000"
